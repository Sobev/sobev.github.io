<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo部署到github pages</title>
    <link href="/2022/03/29/Hexo%E9%83%A8%E7%BD%B2github-pages/"/>
    <url>/2022/03/29/Hexo%E9%83%A8%E7%BD%B2github-pages/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><h3 id="部署到github-首先要在github创建repo-lt-username-gt-github-io-接着配置hexo部署地址"><a href="#部署到github-首先要在github创建repo-lt-username-gt-github-io-接着配置hexo部署地址" class="headerlink" title="部署到github  首先要在github创建repo ,&lt;username&gt;.github.io,接着配置hexo部署地址"></a>部署到github  首先要在github创建repo ,<code>&lt;username&gt;.github.io</code>,接着配置hexo部署地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ deploy:<br>   <span class="hljs-built_in">type</span>: git<br>   repo: https://github.com/YourgithubName/YourgithubName.github.io.git<br>   branch: main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hello</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>See The World V2Ray</title>
    <link href="/2022/03/29/VMESS+WS+TLS%20Auto/"/>
    <url>/2022/03/29/VMESS+WS+TLS%20Auto/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="49f5406fa9465865113ca6a75158904ce1ec6c753bf06cf86218b700150e104d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Hey, password is required here.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>v2-ray</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>部署Austin消息发布平台</title>
    <link href="/2022/03/29/INSTALL/"/>
    <url>/2022/03/29/INSTALL/</url>
    
    <content type="html"><![CDATA[<h2 id="01、安装MYSQL"><a href="#01、安装MYSQL" class="headerlink" title="01、安装MYSQL"></a>01、安装MYSQL</h2><p><strong>一</strong>、下载并安装mysql：</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">wget -i -c http:<span class="hljs-regexp">//</span>dev.mysql.com<span class="hljs-regexp">/get/my</span>sql57-community-release-el7-<span class="hljs-number">10</span>.noarch.rpm<br>yum -y install mysql57-community-release-el7-<span class="hljs-number">10</span>.noarch.rpm<br>yum -y install mysql-community-server<br></code></pre></td></tr></table></figure><p><strong>二</strong>、启动并查看状态MySQL：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl start  mysqld.service<br><span class="hljs-params">system</span>ctl status mysqld.service<br></code></pre></td></tr></table></figure><p><strong>三</strong>、查看MySQL的默认密码：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">grep <span class="hljs-string">&quot;password&quot;</span> /<span class="hljs-keyword">var</span>/<span class="hljs-built_in">log</span>/mysqld.<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><a href="https://tva1.sinaimg.cn/large/008i3skNgy1gwg6eiwyqfj313402mgm8.jpg"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/98b36a9b01de4cc79f3a53245296a19c~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></a></p><p><strong>四</strong>、登录进MySQL</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">mysql -uroot -<span class="hljs-selector-tag">p</span><br></code></pre></td></tr></table></figure><p><strong>五</strong>、修改默认密码（设置密码需要有大小写符号组合—安全性)，把下面的<code>my passrod</code>替换成自己的密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;my password&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>六</strong>、开启远程访问 (把下面的<code>my passrod</code>替换成自己的密码)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;my password&#x27;</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">option</span>;<br><br>flush <span class="hljs-keyword">privileges</span>;<br><br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p><strong>七</strong>、在云服务上增加MySQL的端口</p><h2 id="02、安装DOCKER和DOCKER-COMPOSE"><a href="#02、安装DOCKER和DOCKER-COMPOSE" class="headerlink" title="02、安装DOCKER和DOCKER-COMPOSE"></a>02、安装DOCKER和DOCKER-COMPOSE</h2><p>首先我们需要安装GCC相关的环境：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> gcc<br><br>yum -y <span class="hljs-keyword">install</span> gcc-c++<br></code></pre></td></tr></table></figure><p>安装Docker需要的依赖软件包：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haskell"><span class="hljs-title">yum</span> install -y yum-utils device-mapper-persistent-<span class="hljs-class"><span class="hljs-keyword">data</span> lvm2</span><br></code></pre></td></tr></table></figure><p>设置国内的镜像（提高速度）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum-config-manager --add-repo http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo<br></code></pre></td></tr></table></figure><p>更新yum软件包索引：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">yum makecache fast</span><br></code></pre></td></tr></table></figure><p>安装DOCKER CE(注意：Docker分为CE版和EE版，一般我们用CE版就够用了.)</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> docker-ce<br></code></pre></td></tr></table></figure><p>启动Docker：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> docker<br></code></pre></td></tr></table></figure><p>下载回来的Docker版本：:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><p>运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><p>将可执行权限应用于二进制文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><p>创建软链：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose <span class="hljs-regexp">/usr/</span>bin/docker-compose<br></code></pre></td></tr></table></figure><p>测试是否安装成功：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">docker-compose <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h2 id="03、安装KAFKA"><a href="#03、安装KAFKA" class="headerlink" title="03、安装KAFKA"></a>03、安装KAFKA</h2><p>新建搭建kafka环境的<code>docker-compose.yml</code>文件，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">zookepper:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">wurstmeister/zookeeper</span>                    <span class="hljs-comment"># 原镜像`wurstmeister/zookeeper`</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">zookeeper</span>                        <span class="hljs-comment"># 容器名为&#x27;zookeeper&#x27;</span><br>    <span class="hljs-attr">volumes:</span>                                         <span class="hljs-comment"># 数据卷挂载路径设置,将本机目录映射到容器目录</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/etc/localtime:/etc/localtime&quot;</span><br>    <span class="hljs-attr">ports:</span>                                           <span class="hljs-comment"># 映射端口</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;2181:2181&quot;</span><br><br>  <span class="hljs-attr">kafka:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">wurstmeister/kafka</span>                                <span class="hljs-comment"># 原镜像`wurstmeister/kafka`</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">kafka</span>                                    <span class="hljs-comment"># 容器名为&#x27;kafka&#x27;</span><br>    <span class="hljs-attr">volumes:</span>                                                 <span class="hljs-comment"># 数据卷挂载路径设置,将本机目录映射到容器目录</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/etc/localtime:/etc/localtime&quot;</span><br>    <span class="hljs-attr">environment:</span>                                                       <span class="hljs-comment"># 设置环境变量,相当于docker run命令中的-e</span><br>      <span class="hljs-attr">KAFKA_BROKER_ID:</span> <span class="hljs-number">0</span>                                               <span class="hljs-comment"># 在kafka集群中，每个kafka都有一个BROKER_ID来区分自己</span><br>      <span class="hljs-attr">KAFKA_ADVERTISED_LISTENERS:</span> <span class="hljs-string">PLAINTEXT://ip:9092</span> <span class="hljs-comment"># TODO 将kafka的地址端口注册给zookeeper</span><br>      <span class="hljs-attr">KAFKA_LISTENERS:</span> <span class="hljs-string">PLAINTEXT://0.0.0.0:9092</span>                        <span class="hljs-comment"># 配置kafka的监听端口</span><br>      <span class="hljs-attr">KAFKA_ZOOKEEPER_CONNECT:</span> <span class="hljs-string">zookeeper:2181</span>                <br>      <span class="hljs-attr">KAFKA_CREATE_TOPICS:</span> <span class="hljs-string">&quot;hello_world&quot;</span><br>    <span class="hljs-attr">ports:</span>                              <span class="hljs-comment"># 映射端口</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9092:9092&quot;</span><br>    <span class="hljs-attr">depends_on:</span>                         <span class="hljs-comment"># 解决容器依赖启动先后问题</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">zookepper</span><br><br>  <span class="hljs-attr">kafka-manager:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">sheepkiller/kafka-manager</span>                         <span class="hljs-comment"># 原镜像`sheepkiller/kafka-manager`</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">kafka-manager</span>                            <span class="hljs-comment"># 容器名为&#x27;kafka-manager&#x27;</span><br>    <span class="hljs-attr">environment:</span>                        <span class="hljs-comment"># 设置环境变量,相当于docker run命令中的-e</span><br>      <span class="hljs-attr">ZK_HOSTS:</span> <span class="hljs-string">zookeeper:2181</span> <br>      <span class="hljs-attr">APPLICATION_SECRET:</span> <span class="hljs-string">xxxxx</span><br>      <span class="hljs-attr">KAFKA_MANAGER_AUTH_ENABLED:</span> <span class="hljs-string">&quot;true&quot;</span>  <span class="hljs-comment"># 开启kafka-manager权限校验</span><br>      <span class="hljs-attr">KAFKA_MANAGER_USERNAME:</span> <span class="hljs-string">admin</span>       <span class="hljs-comment"># 登陆账户</span><br>      <span class="hljs-attr">KAFKA_MANAGER_PASSWORD:</span> <span class="hljs-number">123456</span>      <span class="hljs-comment"># 登陆密码</span><br>    <span class="hljs-attr">ports:</span>                              <span class="hljs-comment"># 映射端口</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9000:9000&quot;</span><br>    <span class="hljs-attr">depends_on:</span>                         <span class="hljs-comment"># 解决容器依赖启动先后问题</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">kafka</span><br></code></pre></td></tr></table></figure><p>文件内 <strong>// TODO 中的ip</strong>需要改成自己的，并且如果你用的是云服务器，那需要把端口给打开。</p><p>在存放<code>docker-compose.yml</code>的目录下执行启动命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>可以查看下docker镜像运行的情况：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker ps</span> <br></code></pre></td></tr></table></figure><p>进入kafka 的容器：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker exec -<span class="hljs-keyword">it</span> kafka sh<br></code></pre></td></tr></table></figure><p>创建一个topic(这里我的<strong>topicName</strong>就叫austinBusiness，你们可以改成自己的)</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-variable">$KAFKA_HOME</span>/bin/kafka-topics<span class="hljs-selector-class">.sh</span> <span class="hljs-attr">--create</span> <span class="hljs-attr">--topic</span> austinBusiness <span class="hljs-attr">--partitions</span> <span class="hljs-number">1</span> <span class="hljs-attr">--zookeeper</span> zookeeper:<span class="hljs-number">2181</span> <span class="hljs-attr">--replication-factor</span> <span class="hljs-number">1</span> <br></code></pre></td></tr></table></figure><p>查看刚创建的topic信息：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-variable">$KAFKA_HOME</span>/bin/kafka-topics<span class="hljs-selector-class">.sh</span> <span class="hljs-attr">--zookeeper</span> zookeeper:<span class="hljs-number">2181</span> <span class="hljs-attr">--describe</span> <span class="hljs-attr">--topic</span> austinBusiness<br></code></pre></td></tr></table></figure><h2 id="04、安装REDIS"><a href="#04、安装REDIS" class="headerlink" title="04、安装REDIS"></a>04、安装REDIS</h2><p>首先，我们新建一个文件夹<code>redis</code>，然后在该目录下创建出<code>data</code>文件夹、<code>redis.conf</code>文件和<code>docker-compose.yaml</code>文件</p><p><code>redis.conf</code>文件的内容如下(后面的配置可在这更改，比如requirepass 我指定的密码为<code>austin</code>)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">protected</span>-mode no<br><span class="hljs-attribute">port</span> <span class="hljs-number">6379</span><br><span class="hljs-attribute">timeout</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">save</span> <span class="hljs-number">900</span> <span class="hljs-number">1</span> <br><span class="hljs-attribute">save</span> <span class="hljs-number">300</span> <span class="hljs-number">10</span><br><span class="hljs-attribute">save</span> <span class="hljs-number">60</span> <span class="hljs-number">10000</span><br><span class="hljs-attribute">rdbcompression</span> yes<br><span class="hljs-attribute">dbfilename</span> dump.rdb<br><span class="hljs-attribute">dir</span> /data<br><span class="hljs-attribute">appendonly</span> yes<br><span class="hljs-attribute">appendfsync</span> everysec<br><span class="hljs-attribute">requirepass</span> austin<br><br></code></pre></td></tr></table></figure><p><code>docker-compose.yaml</code>的文件内容如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-symbol">services:</span><br><span class="hljs-symbol">  redis:</span><br><span class="hljs-symbol">    image:</span> redis:latest<br><span class="hljs-symbol">    container_name:</span> redis<br><span class="hljs-symbol">    restart:</span> always<br><span class="hljs-symbol">    ports:</span><br>      - <span class="hljs-number">6379</span>:<span class="hljs-number">6379</span><br><span class="hljs-symbol">    volumes:</span><br>      - ./redis.conf:<span class="hljs-keyword">/usr/</span>local<span class="hljs-keyword">/etc/</span>redis/redis.conf:rw<br>      - ./data:/data:rw<br><span class="hljs-symbol">    command:</span><br>      <span class="hljs-keyword">/bin/</span>bash -c <span class="hljs-string">&quot;redis-server /usr/local/etc/redis/redis.conf &quot;</span><br></code></pre></td></tr></table></figure><p>配置的工作就完了，如果是云服务器，记得开redis端口<strong>6379</strong></p><p>启动Redis跟之前安装Kafka的时候就差不多啦</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker-compose up -d<br><br>docker ps<br><br>docker exec -<span class="hljs-keyword">it</span> redis redis-cli<br><br><span class="hljs-comment">-- 进入到redis后访问的密码</span><br><br>auth austin<br><br></code></pre></td></tr></table></figure><h2 id="05、安装APOLLO"><a href="#05、安装APOLLO" class="headerlink" title="05、安装APOLLO"></a>05、安装APOLLO</h2><p>部署Apollo跟之前一样直接用<code>docker-compose</code>就完事了，在GitHub已经给出了对应的教程和<code>docker-compose.yml</code>以及相关的文件，直接复制粘贴就完事咯。</p><p><strong>PS: Apollo 的docker配置文件可以参考:docker/apollo/文件夹, 简单来说,在 docker/apollo/docker-quick-start/文件夹下执行docker-compose  up -d 执行即可.</strong></p><p>目录结构最好保持一致：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a532e3221834466a85b6739871694957~tplv-k3u1fbpfcp-watermark.image"></p><p>注：我的配置里更改过端口，所以我的程序<code>AustinApplication</code>写的端口为7000</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1b3944f3a9e849219c60e673baa5b7ff~tplv-k3u1fbpfcp-watermark.image"></p><p><strong><a href="https://www.apolloconfig.com/#/zh/deployment/quick-start-docker">https://www.apolloconfig.com/#/zh/deployment/quick-start-docker</a></strong></p><p><strong><a href="https://github.com/apolloconfig/apollo/tree/master/scripts/docker-quick-start">https://github.com/apolloconfig/apollo/tree/master/scripts/docker-quick-start</a></strong></p><p>部门的创建其实也是一份”配置”，输入<code>organizations</code>就能把现有的部门给改掉，我新增了<code>boss</code>股东部门，大家都是我的股东。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41b096b379244288a8ab25c67b484c62~tplv-k3u1fbpfcp-zoom-1.image"></p><p>PS：我的namespace是<code>boss.austin</code></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2101f27fee044a2d86e8d6031c808d95~tplv-k3u1fbpfcp-zoom-1.image"></p><h2 id="06、安装PROMETHEUS和GRAFANA-可选"><a href="#06、安装PROMETHEUS和GRAFANA-可选" class="headerlink" title="06、安装PROMETHEUS和GRAFANA(可选)"></a>06、安装PROMETHEUS和GRAFANA(可选)</h2><p>存放<code>docker-compose.yml</code>的信息：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;2&#x27;</span><br><br><span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">monitor</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">bridge</span><br><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">prometheus</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">prom/prometheus</span><br>        <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">prometheus</span><br>        <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">prometheus</span><br>        <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>        <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">./prometheus.yml:/etc/prometheus/prometheus.yml</span><br>        <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9090:9090&quot;</span><br>        <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">monitor</span><br><br>    <span class="hljs-attribute">alertmanager</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">prom/alertmanager</span><br>        <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">alertmanager</span><br>        <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">alertmanager</span><br>        <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>        <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9093:9093&quot;</span><br>        <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">monitor</span><br><br>    <span class="hljs-attribute">grafana</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">grafana/grafana</span><br>        <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">grafana</span><br>        <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">grafana</span><br>        <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>        <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;3000:3000&quot;</span><br>        <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">monitor</span><br><br>    <span class="hljs-attribute">node-exporter</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">quay.io/prometheus/node-exporter</span><br>        <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">node-exporter</span><br>        <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">node-exporter</span><br>        <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>        <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;9100:9100&quot;</span><br>        <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">monitor</span><br><br>    <span class="hljs-attribute">cadvisor</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">google/cadvisor:latest</span><br>        <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">cadvisor</span><br>        <span class="hljs-attribute">hostname</span><span class="hljs-punctuation">:</span> <span class="hljs-string">cadvisor</span><br>        <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>        <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">/:/rootfs:ro</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">/var/run:/var/run:rw</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">/sys:/sys:ro</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">/var/lib/docker/:/var/lib/docker:ro</span><br>        <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8899:8080&quot;</span><br>        <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">monitor</span><br></code></pre></td></tr></table></figure><p>新建prometheus的配置文件<code>prometheus.yml</code></p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">global</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">scrape_interval</span><span class="hljs-punctuation">:</span> <span class="hljs-string">    15s</span><br>  <span class="hljs-attribute">evaluation_interval</span><span class="hljs-punctuation">:</span> <span class="hljs-string">15s</span><br><span class="hljs-attribute">scrape_configs</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">job_name: &#x27;prometheus&#x27;</span><br>    <span class="hljs-attribute">static_configs</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">targets: [&#x27;ip:9090&#x27;]  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">job_name: &#x27;cadvisor&#x27;</span><br>    <span class="hljs-attribute">static_configs</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">targets: [&#x27;ip:8899&#x27;]  </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">job_name: &#x27;node&#x27;</span><br>    <span class="hljs-attribute">static_configs</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">targets: [&#x27;ip:9100&#x27;]  </span><br></code></pre></td></tr></table></figure><p>（<strong>这里要注意端口，按自己配置的来,ip也要填写为自己的</strong>）</p><p>把这份<code>prometheus.yml</code>的配置往<code>/etc/prometheus/prometheus.yml</code> 路径下<strong>复制</strong>一份。随后在目录下<code>docker-compose up -d</code>启动，于是我们就可以分别访问：</p><ul><li>  <code>http://ip:9100/metrics</code>( 查看服务器的指标)</li><li>  <code>http://ip:8899/metrics</code>（查看docker容器的指标）</li><li>  <code>http://ip:9090/</code>(prometheus的原生web-ui)</li><li>  <code>http://ip:3000/</code>(Grafana开源的监控可视化组件页面)</li></ul><p>进到Grafana首页，配置prometheus作为数据源</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/76474c290b594d72b8c26f32e6c93753~tplv-k3u1fbpfcp-zoom-1.image"></p><p>进到配置页面，写下对应的URL，然后保存就好了。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8a78755f4f30431882878ab08e6855bc~tplv-k3u1fbpfcp-zoom-1.image"></p><p>相关监控的模板可以在 <a href="https://grafana.com/grafana/dashboards/">https://grafana.com/grafana/dashboards/</a> 这里查到。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5836357acce442b480628e06b2e7420a~tplv-k3u1fbpfcp-zoom-1.image"></p><p>服务器的监控直接选用<strong>8919</strong>的就好了</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/01a19e6370f54c10b096e1c9bd743b59~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b97faddc55324c2bac2bf13a6e47355e~tplv-k3u1fbpfcp-zoom-1.image"></p><p>import后就能直接看到高大上的监控页面了：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4505d818d2474d8f83d033ad3ad60a64~tplv-k3u1fbpfcp-zoom-1.image"></p><p>使用模板<strong>893</strong>来配置监控docker的信息：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da69a42ffb984caa99c0beea410dde07~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14a5c8b4fb5441598ddda816d42d56fd~tplv-k3u1fbpfcp-zoom-1.image"></p><p>选用了<code>4701</code>模板的JVM监控和<code>12900</code>SpringBoot监控（<strong>程序代码已经接入了actuator和prometheus</strong>）。需要在<code>prometheus.yml</code>配置下新增暴露的服务地址：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">&#x27;austin&#x27;</span><br>  <span class="hljs-attr">metrics_path:</span> <span class="hljs-string">&#x27;/actuator/prometheus&#x27;</span> <span class="hljs-comment"># 采集的路径</span><br>  <span class="hljs-attr">static_configs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span> [<span class="hljs-string">&#x27;ip:port&#x27;</span>] <span class="hljs-comment"># todo 这里的ip和端口写自己的应用下的</span><br></code></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dbd1b8e2b15242a194da0ce8a7c61a80~tplv-k3u1fbpfcp-zoom-1.image"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26f4d6d83f4a441d85cb0a396cd0543c~tplv-k3u1fbpfcp-zoom-1.image"></p><h2 id="07、安装GRAYLOG（可选）-分布式日志收集框架"><a href="#07、安装GRAYLOG（可选）-分布式日志收集框架" class="headerlink" title="07、安装GRAYLOG（可选）-分布式日志收集框架"></a>07、安装GRAYLOG（可选）-分布式日志收集框架</h2><p><code>docker-compose.yml</code>文件内容：</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">mongo</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">mongo:4.2</span><br>      <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">graylog</span><br>    <span class="hljs-attribute">elasticsearch</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2</span><br>      <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">http.host=0.0.0.0</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">transport.host=localhost</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">network.host=0.0.0.0</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms512m -Xmx512m&quot;</span><br>      <span class="hljs-attribute">ulimits</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">memlock</span><span class="hljs-punctuation">:</span><br>          <span class="hljs-attribute">soft</span><span class="hljs-punctuation">:</span> <span class="hljs-string">-1</span><br>          <span class="hljs-attribute">hard</span><span class="hljs-punctuation">:</span> <span class="hljs-string">-1</span><br>      <span class="hljs-attribute">deploy</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">resources</span><span class="hljs-punctuation">:</span><br>          <span class="hljs-attribute">limits</span><span class="hljs-punctuation">:</span><br>            <span class="hljs-attribute">memory</span><span class="hljs-punctuation">:</span> <span class="hljs-string">1g</span><br>      <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">graylog</span><br>    <span class="hljs-attribute">graylog</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">graylog/graylog:4.2</span><br>      <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">GRAYLOG_PASSWORD_SECRET=somepasswordpepper</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">GRAYLOG_HTTP_EXTERNAL_URI=http://ip:9009/ # 这里注意要改ip</span><br>      <span class="hljs-attribute">entrypoint</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh</span><br>      <span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">graylog</span><br>      <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span><br>      <span class="hljs-attribute">depends_on</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">mongo</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">elasticsearch</span><br>      <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">9009:9000</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">1514:1514</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">1514:1514/udp</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">12201:12201</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">12201:12201/udp</span><br><span class="hljs-attribute">networks</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">graylog</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">driver</span><span class="hljs-punctuation">:</span> <span class="hljs-string">bridge</span><br></code></pre></td></tr></table></figure><p>这个文件里唯一需要改动的就是<code>ip</code>（本来的端口是<code>9000</code>的，我由于已经占用了<code>9000</code>端口了，所以我这里把端口改成了<code>9009</code>，你们可以随意）</p><p>启动以后，我们就可以通过<code>ip:port</code>访问对应的Graylog后台地址了，默认的账号和密码是<code>admin/admin</code></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7d068f7bb7445238688a695eab49c8c~tplv-k3u1fbpfcp-zoom-1.image"></p><p>配置下<code>inputs</code>的配置，找到<code>GELF UDP</code>，然后点击<code>Launch new input</code>，只需要填写<code>Title</code>字段，保存就完事了（其他不用动）。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/88878e8e4bb8428c9c6930cb09d5e249~tplv-k3u1fbpfcp-zoom-1.image"></p><p>最后配置<code>austin.grayLogIp</code>的ip即可实现分布式日志收集</p><h2 id="08、XXL-JOB"><a href="#08、XXL-JOB" class="headerlink" title="08、XXL-JOB"></a>08、XXL-JOB</h2><p>文档：<a href="https://www.xuxueli.com/xxl-job/#2.1%20%E5%88%9D%E5%A7%8B%E5%8C%96%E2%80%9C%E8%B0%83%E5%BA%A6%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%9D">https://www.xuxueli.com/xxl-job/#2.1%20%E5%88%9D%E5%A7%8B%E5%8C%96%E2%80%9C%E8%B0%83%E5%BA%A6%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%9D</a></p><p>xxl-job的部署我这边其实是依赖官网的文档的，步骤可以简单总结为：</p><p><strong>1</strong>、把xxl-job的仓库拉下来</p><p><strong>2</strong>、执行<code>/xxl-job/doc/db/tables_xxl_job.sql</code>的脚本（创建对应的库、创建表以及插入测试数据记录）</p><p><strong>3</strong>、如果是<strong>本地</strong>启动「调度中心」则在<code>xxl-job-admin</code>的<code>application.properties</code>更改相应的数据库配置，改完启动即可</p><p><strong>4</strong>、如果是<strong>云服务</strong>启动「调度中心」，则可以选择拉取<code>docker</code>镜像进行部署，我拉取的是<code>2.30</code>版本，随后执行以下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull xuxueli/xxl-job-admin:2.3.0<br><br>docker run -e PARAMS=&quot;--spring.datasource.url=jdbc:mysql://ip:3306/xxl_job?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;useSSL=false&amp;zeroDateTimeBehavior=convertToNull --spring.datasource.username=root --spring.datasource.password=password &quot; -p 6767:8080 --name xxl-job-admin  -d xuxueli/xxl-job-admin:2.3.0<br><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：第二条命令的<strong>ip</strong>和<strong>password</strong>需要更改为自己的，并且，我开的是<strong>6767</strong>端口</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/180eabb4945e475494f3803c69318755~tplv-k3u1fbpfcp-zoom-1.image"></p><h2 id="09、未完待续"><a href="#09、未完待续" class="headerlink" title="09、未完待续"></a>09、未完待续</h2><p>安装更详细的过程以及整个文章系列的更新思路都在公众号<strong>Java3y</strong>连载哟！</p><p>如果你需要用这个项目写在简历上，<strong>强烈建议关注公众号看实现细节的思路</strong>。如果⽂档中有任何的不懂的问题，都可以直接来找我询问，我乐意帮助你们！公众号下有我的联系方式</p><img align="center" src='https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e109cdb8d064c1e87541d7b6c17957d~tplv-k3u1fbpfcp-zoom-1.image' width=300px height=300px />]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
